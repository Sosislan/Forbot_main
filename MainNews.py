import time
import schedule
import requests
from datetime import datetime, timedelta
from translate import Translator
from telebot import TeleBot
from config import Bot_token, News_API_TOKEN

# –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
TELEGRAM_TOKEN = Bot_token
TELEGRAM_CHAT_ID = "@testcrupto"  # –í–∞—à Telegram-–∫–∞–Ω–∞–ª/—á–∞—Ç
NEWSAPI_URL = "https://newsapi.org/v2/everything"
NEWSAPI_KEY = News_API_TOKEN  # –í–∞—à —Ç–æ–∫–µ–Ω NewsAPI
bot = TeleBot(TELEGRAM_TOKEN)
translator = Translator(to_lang="ru")
published_urls = set()  # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è URL –≤–∂–µ –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–∏—Ö –Ω–æ–≤–∏–Ω

def get_crypto_news():
    """–û—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–æ–≤–∏–Ω –∑ NewsAPI"""
    params = {
        "q": "cryptocurrency OR bitcoin OR blockchain",  # –ö–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞ –¥–ª—è –ø–æ—à—É–∫—É
        "sortBy": "publishedAt",  # –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –∑–∞ —á–∞—Å–æ–º –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó
        "language": "en",  # –ú–æ–≤–∞ –Ω–æ–≤–∏–Ω
        "apiKey": NEWSAPI_KEY
    }
    try:
        response = requests.get(NEWSAPI_URL, params=params)
        if response.status_code == 200:
            news = response.json().get("articles", [])
            print(f"–û—Ç—Ä–∏–º–∞–Ω–æ –Ω–æ–≤–∏–Ω: {len(news)}")
            return news
        else:
            print(f"–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–æ–≤–∏–Ω: {response.status_code}")
            return []
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ API: {e}")
        return []

def filter_recent_news(news_list):
    """–§—ñ–ª—å—Ç—Ä—É–≤–∞–Ω–Ω—è –Ω–æ–≤–∏–Ω –∑–∞ –æ—Å—Ç–∞–Ω–Ω—é –≥–æ–¥–∏–Ω—É"""
    one_hour_ago = datetime.now() - timedelta(hours=1)
    recent_news = []
    for news in news_list:
        if "publishedAt" in news:
            news_time = datetime.strptime(news["publishedAt"], "%Y-%m-%dT%H:%M:%SZ")
            if news_time > one_hour_ago:
                recent_news.append(news)
    return recent_news

def translate_text(text):
    """–ü–µ—Ä–µ–∫–ª–∞–¥ —Ç–µ–∫—Å—Ç—É –Ω–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫—É –∑ –æ–±–º–µ–∂–µ–Ω–Ω—è–º –¥–æ–≤–∂–∏–Ω–∏"""
    try:
        if len(text) > 500:  # –û–±–º–µ–∂–µ–Ω–Ω—è –¥–æ–≤–∂–∏–Ω–∏
            text = text[:500]
        translated = translator.translate(text)
        return translated
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–∫–ª–∞–¥—É: {e}")
        return text  # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç —É —Ä–∞–∑—ñ –ø–æ–º–∏–ª–∫–∏

def post_news_to_telegram():
    """–ü—É–±–ª—ñ–∫–∞—Ü—ñ—è –Ω–æ–≤–∏–Ω —É Telegram"""
    news_list = get_crypto_news()  # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö –Ω–æ–≤–∏–Ω
    if not news_list:
        print("–ù–µ–º–∞—î –Ω–æ–≤–∏–Ω –¥–ª—è –æ–±—Ä–æ–±–∫–∏.")
        return

    recent_news = filter_recent_news(news_list)  # –§—ñ–ª—å—Ç—Ä—É–≤–∞–Ω–Ω—è –∑–∞ –æ—Å—Ç–∞–Ω–Ω—é –≥–æ–¥–∏–Ω—É
    recent_news = [news for news in recent_news if news.get("url") not in published_urls]  # –£–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–≤—Ç–æ—Ä—ñ–≤

    if not recent_news:
        print("–ù–µ–º–∞—î –Ω–æ–≤–∏—Ö –Ω–æ–≤–∏–Ω –∑–∞ –æ—Å—Ç–∞–Ω–Ω—é –≥–æ–¥–∏–Ω—É.")
        return

    for news in recent_news[:5]:  # –ü—É–±–ª—ñ–∫—É—î–º–æ –º–∞–∫—Å–∏–º—É–º 5 –Ω–æ–≤–∏–Ω
        url = news.get("url", "–ë–µ–∑ –ø–æ—Å–∏–ª–∞–Ω–Ω—è")
        title = translate_text(news.get("title", "–ë–µ–∑ –Ω–∞–∑–≤–∏"))
        description = translate_text(news.get("body", "–û–ø–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π"))
        message = f"üì∞ {title}\n\n{description[:500]}...\n\nüîó [–ß–∏—Ç–∞—Ç–∏ –¥–∞–ª—ñ]({url})"
        try:
            time.sleep(2)  # –ó–∞—Ç—Ä–∏–º–∫–∞ –º—ñ–∂ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º–∏
            bot.send_message(chat_id=TELEGRAM_CHAT_ID, text=message, parse_mode="Markdown")
            published_urls.add(url)  # –£–Ω–∏–∫–Ω–µ–Ω–Ω—è –¥—É–±–ª—é–≤–∞–Ω–Ω—è
            print(f"–û–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ: {title}")
        except Exception as e:
            print(f"–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è: {e}")

# –†–æ–∑–∫–ª–∞–¥ —Ä–æ–±–æ—Ç–∏
schedule.every(15).hours.do(post_news_to_telegram)

if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ. –û—á—ñ–∫—É–≤–∞–Ω–Ω—è...")
    post_news_to_telegram()
    while True:
        schedule.run_pending()
        time.sleep(1)
